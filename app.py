
from flask import Flask, render_template, request
import openai
import uuid
from datetime import datetime

app = Flask(__name__)

VISUALCORE_VERSION = "v0.1"
WATERMARK = f"Generated by VisualCore™ · MVP · {VISUALCORE_VERSION} · © {datetime.now().year}"

def parse_intent(prompt, api_key):
    openai.api_key = api_key
    response = openai.ChatCompletion.create(
        model="gpt-4",
        messages=[
            {"role": "system", "content": "You are INTENTMIND. Extract visual and emotional structure from user prompt."},
            {"role": "user", "content": prompt}
        ],
        temperature=0.3
    )
    return response['choices'][0]['message']['content']

def generate_image(prompt, api_key):
    openai.api_key = api_key
    response = openai.Image.create(
        prompt=prompt,
        n=1,
        size="1024x1024",
        response_format="url"
    )
    return response['data'][0]['url']

@app.route("/", methods=["GET", "POST"])
def index():
    result = {"intent": "", "image_url": "", "session_id": "", "timestamp": "", "error": ""}

    if request.method == "POST":
        api_key = request.form.get("api_key")
        prompt = request.form.get("prompt")
        if not api_key or not prompt:
            result["error"] = "API key and prompt are required."
        else:
            try:
                result["intent"] = parse_intent(prompt, api_key)
                result["image_url"] = generate_image(prompt, api_key)
                result["session_id"] = str(uuid.uuid4())
                result["timestamp"] = datetime.now().isoformat()
            except Exception as e:
                result["error"] = str(e)

    return render_template("index.html", result=result, version=VISUALCORE_VERSION, watermark=WATERMARK)

if __name__ == "__main__":
    app.run(host="0.0.0.0", port=5000)
